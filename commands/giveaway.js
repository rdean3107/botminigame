const { EmbedBuilder } = require('discord.js');
const ms = require('ms');

module.exports = {
    name: 'ga',
    description: 'T·∫°o giveaway v√† ch·ªçn ng∆∞·ªùi th·∫Øng cu·ªôc.',
    async execute(message, args) {
        const { channel } = message;

        // Ki·ªÉm tra quy·ªÅn
        if (!message.member.permissions.has('MANAGE_GUILD')) {
            return message.reply('B·∫°n kh√¥ng c√≥ quy·ªÅn qu·∫£n l√Ω server ƒë·ªÉ t·∫°o giveaway!');
        }

        // Ki·ªÉm tra c√∫ ph√°p l·ªánh
        if (args.length < 3) {
            return message.reply('Vui l√≤ng cung c·∫•p ƒë·∫ßy ƒë·ªß th√¥ng tin. C√∫ ph√°p: `!ga <th·ªùi gian> <s·ªë ng∆∞·ªùi th·∫Øng> <gi·∫£i th∆∞·ªüng>`');
        }

        const time = ms(args[0]);
        const winners = parseInt(args[1]);
        const prize = args.slice(2).join(' ');

        if (isNaN(time) || time <= 0) {
            return message.reply('Th·ªùi gian kh√¥ng h·ª£p l·ªá! Vui l√≤ng s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng nh∆∞ `1s`, `1m`, `1h`, `1d`.');
        }

        if (isNaN(winners) || winners <= 0) {
            return message.reply('S·ªë ng∆∞·ªùi th·∫Øng cu·ªôc kh√¥ng h·ª£p l·ªá!');
        }

        const endTime = Date.now() + time;
        const endDate = new Date(endTime);
        const now = new Date();
        const isTomorrow = endDate.toDateString() !== now.toDateString();
        const timeString = isTomorrow
            ? `Ng√†y mai l√∫c ${endDate.getHours()}:${endDate.getMinutes().toString().padStart(2, '0')}`
            : `H√¥m nay l√∫c ${endDate.getHours()}:${endDate.getMinutes().toString().padStart(2, '0')}`;

        // G·ª≠i embed
        const giveawayEmbed = new EmbedBuilder()
            .setTitle(prize)
            .setDescription(`
                B·∫•m: <a:kh_hun:1239924970188967946> ƒë·ªÉ tham gia giveaway!
                Th·ªùi gian c√≤n l·∫°i: ${ms(time, { long: true })}
                L√†m b·ªüi: ${message.author.tag}
                ${winners} gi·∫£i ‚Ä¢ ${timeString}
            `)
            .setColor('#FF0000')
            .setThumbnail(message.author.displayAvatarURL());

        try {
            const giveawayMessage = await channel.send({ embeds: [giveawayEmbed] });
            await giveawayMessage.react('<a:kh_hun:1239924970188967946>');

            // X·ª≠ l√Ω k·∫øt qu·∫£ sau khi h·∫øt th·ªùi gian
            setTimeout(async () => {
                try {
                    const reactions = giveawayMessage.reactions.cache.get('1239924970188967946');
                    if (!reactions) {
                        return channel.send('Kh√¥ng c√≥ ai tham gia giveaway!');
                    }

                    const users = await reactions.users.fetch();
                    const participants = users.filter(user => !user.bot).map(user => user.id);
                    if (participants.length === 0) {
                        return channel.send('Kh√¥ng c√≥ ai tham gia h·ª£p l·ªá!');
                    }

                    const selectedWinners = participants.sort(() => 0.5 - Math.random()).slice(0, winners);
                    const winnersText = selectedWinners.map(id => `<@${id}>`).join(', ');

                    channel.send(`üéâ Ch√∫c m·ª´ng ${winnersText}! B·∫°n ƒë√£ tr√∫ng **${prize}** üéâ`);
                } catch (error) {
                    console.error('L·ªói khi ch·ªçn ng∆∞·ªùi th·∫Øng:', error);
                    channel.send('ƒê√£ x·∫£y ra l·ªói khi ch·ªçn ng∆∞·ªùi th·∫Øng!');
                }
            }, time);

        } catch (error) {
            console.error('L·ªói khi g·ª≠i tin nh·∫Øn ho·∫∑c th√™m reaction:', error);
            message.reply('ƒê√£ x·∫£y ra l·ªói khi t·∫°o giveaway. Vui l√≤ng th·ª≠ l·∫°i.');
        }
    },
};
